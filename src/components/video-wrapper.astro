---
import intro_text from '../assets/overlay-text.png';
import intro_image from '../assets/start_2min2.png';
import intro_video from '../assets/webtrailer.mp4';
import CtaLink from '../components/ui/cta.astro';

export const ctaVideoId = 'cta-element-video';

import {useTranslations, getLocaleFromUrl} from '../i18n/i18n.ts';

const locale = getLocaleFromUrl(Astro.url);


const t = useTranslations(locale);
---

<section
  transition:persist="video"
  class="parallax relative mx-[calc(-1*var(--page-margin-inline))] max-h-[1057px]"
>
  <video
    playsinline
    poster={intro_image.src}
    muted
    loop
    class="relative z-1 size-full h-[60dvh] max-h-[600px] object-cover object-top"
    aria-label="Introductory video showing the escape room experience at Skurrilum"
  >
    <source src={intro_video} type="video/mp4" />
  </video>
  <div
    class="absolute-center pointer-events-none z-2 z-3 flex size-full flex-col justify-center"
  >
    <img
      src={intro_text.src}
      alt="Introductory text overlay"
      class="intro-image h-[50%] object-contain"
    />
    <button
      aria-label="Play video "
      class="play-icon pointer-events-auto mx-[auto!important] block cursor-pointer px-4 py-2 text-white"
      id="video-play-button"></button>
    <CtaLink
      id={ctaVideoId}
      label={t("cta.bookGame")}      class="pointer-events-auto mt-4 px-4 py-2 text-white hidden sm:block"
    />
  </div>
</section>

<script>
  //document.addEventListener('DOMContentLoaded', () => {
  document.addEventListener('astro:page-load', () => {
    setupVideo();
  });

  // This is defined in the frontmatter but we should use the define:vars directive. should be fixed
  const ctaVideoId = 'cta-element-video';
  import {getLocaleFromUrl, useTranslations} from '../i18n/i18n.ts';

  //(function () {
  //  setupVideo();
  //})();

  function setupVideo() {
    const videoElement = document.querySelector('video');
    const playButton = document.getElementById('video-play-button');
    const introImage = document.querySelector('.intro-image');
    const videoCta = document.querySelector('#cta-element-video');

    // I update the text here because we use the direcive persists on the video element
    const locale = getLocaleFromUrl(window.location.href);

    const t = useTranslations(locale);

    const ctaElement = document.querySelector(`#${ctaVideoId} > span`);
    if (ctaElement) {
      ctaElement.innerText = t('cta.bookGame');
    }

    const isDesktop = window.matchMedia('(min-width: 728px)').matches;

    if (playButton && videoElement && introImage) {
      videoElement.autoplay = isDesktop;
      playButton.addEventListener('click', () => {
        // Enable controls and unmute when user plays the video
        videoElement.controls = true;
        videoElement.loop = false; // Disable loop when controls are visible
        videoElement.style.zIndex = '3';
        videoElement.play();
        //playButton.style.display = 'none';
      });
console.log("videoCta", videoCta);
      videoElement.addEventListener('play', () => {
        playButton.style.display = 'none';
        introImage.style.display = 'none';
        videoCta.style.display = 'none';
        videoElement.controls = true;
      });
      videoElement.addEventListener('pause', () => {
        console.log('paused');
        videoCta.style.display = 'block';
        introImage.style.display = 'block';
        // Keep controls visible when paused
        if (!videoElement.ended) {
          playButton.style.display = 'none';
        }
      });
    }
  }
</script>
