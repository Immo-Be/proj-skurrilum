---
// import {Icon} from 'astro-icon/components';
import {getHomePermalink, trimSlash} from '../utils/permalinks';

import type {CallToAction} from '../types/types';
import {Icon} from 'astro-icon/components';
import Logo from './Logo.astro';
import ToggleIcon from './ToggleMenu.astro';
import Cta from './Cta.astro';

interface Link {
  text?: string;
  href?: string;
  ariaLabel?: string;
  icon?: string;
}

interface MenuLink extends Link {
  links?: Array<MenuLink>;
}

export interface Props {
  id?: string;
  links?: Array<MenuLink>;
  actions?: Array<CallToAction>;
  isSticky?: boolean;
  isFixed?: boolean;
  isDark?: boolean;
  isFullWidth?: boolean;
  showToggleTheme?: boolean;
  showRssFeed?: boolean;
  position?: string;
}

const {
  id = 'header',
  links = [],
  isSticky = false,
  isFixed = false,
  isDark = false,
  isFullWidth = false,
  position = 'center',
} = Astro.props;

// console.log('links', links);

const currentPath = `/${trimSlash(new URL(Astro.url).pathname)}`;
---

<header
  class:list={[
    {
      sticky: isSticky,
      fixed: isFixed,
      relative: !isSticky && !isFixed,
      dark: isDark,
    },
    'top-0 z-40 flex-none mx-auto w-full border-b border-gray-50/0 transition-[opacity] ease-in-out',
  ]}
  {...isSticky || isFixed ? {'data-aw-sticky-or-fixed-header': true} : {}}
  {...id ? {id} : {}}
>
  <div class="absolute inset-0"></div>
  <div
    class:list={[
      'relative text-default py-3 px-3 md:px-6 mx-auto w-full',
      {
        'md:flex md:justify-between': position !== 'center',
      },
      {
        'md:grid md:grid-cols-3 md:items-center': position === 'center',
      },
      {
        'max-w-7xl': !isFullWidth,
      },
    ]}
  >
    <div
      class:list={[
        {'mr-auto rtl:mr-0 rtl:ml-auto': position === 'right'},
        'flex justify-between',
      ]}
    >
      <a class="flex items-center" href={getHomePermalink()}>
        <Logo />
      </a>
      <div class="flex items-center md:hidden">
        <ToggleIcon />
      </div>
    </div>
    <nav
      class="items-center w-full md:w-auto hidden md:flex md:mx-5 text-default overflow-y-auto overflow-x-hidden md:overflow-y-visible md:overflow-x-auto md:justify-self-center"
      aria-label="Main navigation"
    >
      <ul
        class="flex flex-col md:flex-row md:self-center w-full md:w-auto text-xl md:text-[0.9375rem] tracking-[0.01rem] font-medium md:justify-center"
      >
        {
          links.map(({text, href, links}) => (
            <li class={links?.length ? 'dropdown' : ''}>
              {links?.length ? (
                <>
                  <button
                    type="button"
                    class="hover:text-link px-4 py-3 flex items-center">
                    {text}
                    <Icon
                      name="tabler:chevron-down"
                      class="w-3.5 h-3.5 ml-0.5 rtl:ml-0 rtl:mr-0.5 hidden md:inline"
                    />
                  </button>
                  <ul class="dropdown-menu md:backdrop-blur-md rounded md:absolute pl-4 md:pl-0 md:hidden font-medium md:bg-page opacity-90 md:min-w-[200px] drop-shadow-xl">
                    {links.map(({text: text2, href: href2}) => (
                      <li class="md:hover:bg-muted">
                        <a
                          class:list={[
                            'first:rounded-t last:rounded-b py-2 px-5 block whitespace-no-wrap',
                            {'aw-link-active': href2 === currentPath},
                          ]}
                          href={href2}>
                          {text2}
                        </a>
                      </li>
                    ))}
                  </ul>
                </>
              ) : (
                <a
                  class:list={[
                    'px-4 py-3 flex items-center cursor-pointer',
                    {'aw-link-active': href === currentPath},
                  ]}
                  href={href}>
                  {text}
                </a>
              )}
            </li>
          ))
        }
        <li
          class="transition-transform duration-500 translate-x-full"
          id="cta-element-header"
        >
          <Cta class="px-4 py-3 flex items-center cursor-pointer" />
        </li>
      </ul>
    </nav>
    <div
      class:list={[
        {'ml-auto rtl:ml-0 rtl:mr-auto': position === 'left'},
        'hidden md:self-center md:flex items-center md:mb-0 fixed w-full md:w-auto md:static justify-end left-0 rtl:left-auto rtl:right-0 bottom-0 p-3 md:p-0 md:justify-self-end',
      ]}
    >
    </div>
  </div>
</header>
