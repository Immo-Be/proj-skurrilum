---
import {getHomePermalink, trimSlash} from '../utils/permalinks';

import type {CallToAction} from '../types/types';
import Logo from './Logo.astro';
import ToggleIcon from './ToggleMenu.astro';
import Cta from './Cta.astro';

interface Link {
  text?: string;
  href?: string;
  ariaLabel?: string;
  icon?: string;
}

interface MenuLink extends Link {
  links?: Array<MenuLink>;
}

export interface Props {
  id?: string;
  links?: Array<MenuLink>;
  actions?: Array<CallToAction>;
  isSticky?: boolean;
  isFixed?: boolean;
  isDark?: boolean;
  isFullWidth?: boolean;
  showToggleTheme?: boolean;
  showRssFeed?: boolean;
  position?: string;
}

const {
  id = 'header',
  links = [],
  isSticky = false,
  isFixed = false,
  //   position = 'center',
} = Astro.props;

const currentPath = `/${trimSlash(new URL(Astro.url).pathname)}`;
---

<header
  class:list={[
    {
      sticky: isSticky,
      fixed: isFixed,
      relative: !isSticky && !isFixed,
    },
    'group top-0 z-40 mx-auto w-full flex-none border-b border-gray-50/0 transition-[opacity] ease-in-out',
  ]}
  {...isSticky || isFixed ? {'data-sticky-or-fixed-header': true} : {}}
  {...id ? {id} : {}}
>
  <div
    class:list={[
      'text-default text-primary-fg-light group-[.expanded]:text-primary-fg group-[.expanded]:bg-primary-bg group-[.scroll]:bg-primary-bg group-[.scroll]:text-primary-fg relative h-full px-[var(--page-margin-inline)] md:flex md:items-center md:justify-center md:p-4',
    ]}
  >
    <div
      class:list={[
        'flex w-full items-center justify-between md:w-auto md:justify-center',
      ]}
    >
      <a class="flex items-center md:inline-block" href={getHomePermalink()}>
        <Logo customClass="hidden group-[.scroll]:block" />
      </a>
      <!-- <Cta
        class="px-2 py-0.5 flex items-center cursor-pointer cta-element-header-desktop"
        label=`Jetzt\u00A0buchen`
      /> -->

      <div class="flex items-center md:hidden">
        <ToggleIcon />
      </div>
    </div>
    <nav
      class="text-default ml-12 hidden w-full items-center overflow-y-auto md:mx-5 md:flex md:w-auto md:justify-self-center md:overflow-x-auto md:overflow-y-visible"
      aria-label="Main navigation"
    >
      <ul
        class="flex w-full flex-col gap-4 overflow-x-hidden text-xl font-medium tracking-[0.01rem] md:w-auto md:flex-row md:justify-center md:gap-4 md:self-center md:text-[0.9375rem]"
      >
        {
          links.map(({text, href, links}) => (
            <li class={links?.length ? 'dropdown' : ''}>
              {links?.length ? (
                <>
                  <button
                    type="button"
                    class="hover:text-link text-3xl md:text-base">
                    {text}
                    {/* Replace Icon */}
                    {/* <Icon
                      name=""
                      class="w-3.5 h-3.5 ml-0.5 rtl:ml-0 rtl:mr-0.5 hidden md:inline"
                    /> */}
                  </button>
                  <ul class="dropdown-menu md:bg-page rounded-xs pl-4 font-medium opacity-90 drop-shadow-xl md:absolute md:hidden md:min-w-[200px] md:pl-0 md:backdrop-blur-md">
                    {links.map(({text: text2, href: href2}) => (
                      <li class="md:hover:bg-muted">
                        <a
                          class:list={[
                            'whitespace-no-wrap block px-5 py-2 first:rounded-t last:rounded-b',
                            {'aw-link-active': href2 === currentPath},
                          ]}
                          href={href2}>
                          {text2}
                        </a>
                      </li>
                    ))}
                  </ul>
                </>
              ) : (
                <a
                  class:list={[
                    'cursor-pointer',
                    'text-3xl md:text-base',
                    {'aw-link-active': href === currentPath},
                  ]}
                  href={href}>
                  {text}
                </a>
              )}
            </li>
          ))
        }

        <li
          class="transition-translate translate-x-[200px] duration-500"
          id="cta-element-header-desktop"
        >
          <Cta class="cursor-pointer" label=`Jetzt\u00A0buchen` />
        </li>
      </ul>
    </nav>
  </div>
</header>
