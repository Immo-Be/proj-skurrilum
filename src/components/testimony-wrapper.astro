---
import bgImage from "../assets/testimony/testimony-bg.jpg"
import { Image } from 'astro:assets';

import pressInfo1 from "../assets/testimony/PRESSE1-600x300.png"
import pressInfo2 from "../assets/testimony/PRESSE2-600x300.png"
import pressInfo3 from "../assets/testimony/PRESSE3-600x300.png"

const pressImages = [
  { src: pressInfo1, alt: "Press info 1" },
  { src: pressInfo2, alt: "Press info 2" },
  { src: pressInfo3, alt: "Press info 3" },
];
---

<div class="mx-[calc(-1*var(--page-margin-inline))] testimony-section relative flex flex-col items-center mb-40">
  <Image src={bgImage} alt="Background image" class="h-[300px] sm:h-[500px] w-full mb-20 object-cover object-[25%_75%] blur-xs" />
  
  <div class="press-carousel container mx-auto px-4 absolute left-1/2 transform -translate-x-1/2 w-full max-w-[1200px]">
    <!-- Desktop view: all three images visible -->
    <div class="hidden lg:flex gap-4 justify-center">
      {pressImages.map((img) => (
        <div class="p-3 shadow-lg rounded-lg press-item transform transition-transform hover:scale-105 flex justify-center max-w-[600px]">
          <Image src={img.src} alt={img.alt} width={600} height={300} class="rounded" />
        </div>
      ))}
    </div>
    
    <!-- Mobile/tablet carousel -->
    <div class="press-carousel-mobile lg:hidden flex overflow-hidden relative rounded-lg shadow-lg h-[300px] mx-auto">
      {pressImages.map((img) => (
        <div class="carousel-slide w-full absolute inset-0 flex-shrink-0 p-3 flex justify-center items-center">
          <Image src={img.src} alt={img.alt} width={600} height={300} class="rounded" />
        </div>
      ))}
    </div>
  </div>
</div>

<script>
  // Auto-rotate carousel for mobile/tablet

  // Initialize carousel on Astro page load/transitions
  document.addEventListener('astro:page-load', initCarousel);
  let intervalId: ReturnType<typeof setInterval>  | null = null; 

  function initCarousel() {
    const carousel = document.querySelector('.press-carousel-mobile');
    if (!carousel) return;
    
    const slides = carousel.querySelectorAll('.carousel-slide');
    const slideCount = slides.length;
    let currentSlide = 0;
    
    // Set initial position for slides
    slides.forEach((slide, index) => {
      (slide as HTMLElement).style.transform = `translateX(${100 * index}%)`;
    });
    
    // Rotate slides every 4 seconds
    function rotateSlides() {
      currentSlide = (currentSlide + 1) % slideCount;
      
      slides.forEach((slide, index) => {
        const offset = (index - currentSlide) * 100;
        (slide as HTMLElement).style.transform = `translateX(${offset}%)`;
        (slide as HTMLElement).style.transition = 'transform 0.5s ease-in-out';
      });
    }
    
    // Clear any existing interval before setting a new one
    if (intervalId) {
      clearInterval(intervalId);
    }
    
    intervalId = setInterval(rotateSlides, 4000);
  }

  
  // Clean up interval on page navigation
  document.addEventListener('astro:before-swap', () => {
    if (intervalId) {
      clearInterval(intervalId);
    }
  });
</script>

