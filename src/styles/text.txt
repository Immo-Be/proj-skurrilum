@import 'tailwindcss';

@custom-variant dark (&:is(.dark *));

@theme {
  --font-sans:
    Nunito-Regular, ui-sans-serif, system-ui, sans-serif, 'Apple Color Emoji',
    'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';


  --color-primary: var(--aw-color-primary);
  --color-text: rgb(var(--color-text));
  --color-text_difference: rgb(var(--color-text-difference));
  --color-secondary: var(--aw-color-secondary);
  --color-accent: var(--aw-color-accent);
  --color-default: var(--aw-color-text-default);
  --color-muted: var(--aw-color-text-muted);
}

/*
  The default border color has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {

/*  *,*/
/*  ::after,*/
/*  ::before,*/
/*  ::backdrop,*/
/*  ::file-selector-button {*/
/*    border-color: var(--color-gray-200, currentColor);*/
/*  }*/
/*}*/

/*  background-size: cover;*/
/*  background-position: center;*/
/*  /*I think this is not working*/*/
/*  width: var(--logo-width);*/
/*  height: var(--logo-height);*/
/*}*/
}
@utility header-test {
  background-color: rgba(245, 245, 247, 0.8) !important;
  backdrop-filter: saturate(180%) blur(20px);
}




@layer utilities {
  .main-grid {
    /* display: grid;
  grid-template-rows: minmax(auto, 400px) minmax(min-content, 1fr); */
  }

  /* Custom reset or global styles */
  * {
    margin: 0;
    padding: 0;
  }

  *,
  *::before,
  *::after {
    box-sizing: border-box;
  }

  /* html,
body,
#root {
} */
  /* Register your custom font family and tell the browser where to find it. */
}

@layer base {
  body {
    -webkit-font-smoothing: antialiased;
    margin: 0;
    --size: var(--small);
    --ascender: 1.01;
    --cap-height: 0.718;
    --x-height: 0.523;
    --descender: -0.24;
    font-weight: 400;
    --left-bearing: 0.081;
    --stem-width: 0.077;
    --char-height: var(--x-height);
    --font-size-adjust: var(--char-height);
    --font-size: calc(var(--size) / var(--font-size-adjust));
    --line-height: calc(var(--x-large) * var(--font-size-adjust));
    font-size: calc(var(--font-size) * 1rem);
    line-height: var(--line-height);
    color: var(--fg-color);
    /* min-height: 100vh;
    min-height: 100dvh;
    position: relative; */
    gap: var(--page-margin);
    /* overflow-y: hidden; */
  }

  /* Define custom variables */
  :root {
    --transition-speed: 0.3s;
    --logo-width: 4rem;
    --logo-height: 2rem;

    --aw-color-primary: rgb(241 234 229);
    --aw-color-secondary: rgb(1 84 207);
    --aw-color-accent: rgb(109 40 217);

    --aw-color-text-heading: rgb(0 0 0);
    --aw-color-text-default: rgb(16 16 16);
    --aw-color-text-muted: rgb(16 16 16 / 66%);
    --aw-color-bg-page: rgb(255 255 255);

    --aw-color-bg-page-dark: rgb(3 6 32);

    ::selection {
      background-color: lavender;
    }
  }

  /* When adding a new color, make sure to add it to the dark mode as well
  CAREFEUL: The colors have to be in this format: --color-name: red green blue; */
  :root {

    /* This is the variable which is used by quinbook */
    --VD_TXT_COLOR: var(--color-text) !important;
  }

  @media (prefers-color-scheme: dark) {
    :root {
      --color-primary: 33 33 33;
      --color-text: var(--color-light);
      /* This doesn't make sense but works for now. Fix later */
      --color-text-difference: var(--color-light);

      --aw-color-primary: rgb(33 33 33);
      --aw-color-secondary: rgb(1 84 207);
      --aw-color-accent: rgb(109 40 217);

      --aw-color-text-heading: rgb(247, 248, 248);
      --aw-color-text-default: rgb(229 236 246);
      --aw-color-text-muted: rgb(229 236 246 / 66%);
      --aw-color-bg-page: rgb(3 6 32);

      ::selection {
        background-color: black;
        color: snow;
      }
    }
  }

  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    @apply text-balance;
  }

  p,
  li,
  figcaption {
    @apply max-w-[65ch] text-pretty;
  }
}

@custom-variant dark (&:is(.dark *));

@theme {
  --font-sans:
    Nunito-Regular, ui-sans-serif, system-ui, sans-serif, 'Apple Color Emoji',
    'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';

  --text-sm: var(--step-0);
  --text-base: var(--step-1);
  --text-xl: var(--step-2);
  --text-2xl: var(--step-3);
  --text-3xl: var(--step-4);
  --text-4xl: var(--step-5);
  --text-5xl: var(--step-6);
  --text-6xl: var(--step-7);
  --text-7xl: var(--step-8);
  --text-8xl: var(--step-9);
  --text-9xl: var(--step-10);

  --color-primary: var(--aw-color-primary);
  --color-text: rgb(var(--color-text));
  --color-text_difference: rgb(var(--color-text-difference));
  --color-secondary: var(--aw-color-secondary);
  --color-accent: var(--aw-color-accent);
  --color-default: var(--aw-color-text-default);
  --color-muted: var(--aw-color-text-muted);
}

/*
  The default border color has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {

  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentColor);
  }
}

@utility text-step-0 {
  font-size: var(--step-0);
}

@utility text-step-1 {
  font-size: var(--step-1);
}

@utility text-step-2 {
  font-size: var(--step-2);
}

@utility text-step-3 {
  font-size: var(--step-3);
}

@utility text-step-4 {
  font-size: var(--step-4);
}

@utility text-step-5 {
  font-size: var(--step-5);
}

@utility text-step-6 {
  font-size: var(--step-6);
}

@utility text-step-7 {
  font-size: var(--step-7);
}

@utility text-step-8 {
  font-size: var(--step-8);
}

@utility text-step-9 {
  font-size: var(--step-9);
}

@utility text-step-10 {
  font-size: var(--step-10);
}


@utility bg-page {
  background-color: var(--aw-color-bg-page);
}

@utility bg-dark {
  background-color: var(--aw-color-bg-page-dark);
}

@utility bg-light {
  background-color: var(--aw-color-bg-page);
}

@utility text-page {
  color: var(--aw-color-text-page);
}

@utility text-muted {
  color: var(--aw-color-text-muted);
}

@utility bg-muted {
  background-color: var(--aw-color-accent);
}

@utility parallax-container {
  perspective: 1px;
  overflow-x: hidden;
  overflow-y: auto;
  height: 100vh;
}

@utility parallax {
  transform: translateZ(-1px) scale(2);
  position: relative;
}

@utility btn {
  @apply text-page inline-flex cursor-pointer items-center justify-center rounded-full border border-gray-400 bg-transparent px-6 py-3.5 text-center text-base leading-snug font-medium transition duration-200 ease-in hover:border-gray-600 hover:bg-gray-100 focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 focus:ring-offset-blue-200 md:px-8 dark:border-slate-500 dark:text-slate-300 dark:hover:border-slate-800 dark:hover:bg-slate-800;
}

@utility btn-primary {
  @apply btn border-primary bg-primary hover:border-secondary hover:bg-secondary dark:border-primary dark:bg-primary dark:hover:border-secondary dark:hover:bg-secondary font-semibold text-white hover:text-white dark:text-white;
}

@utility btn-secondary {
  @apply btn;
}

@utility btn-tertiary {
  @apply btn text-muted border-none shadow-none hover:text-gray-900 dark:text-gray-400 dark:hover:text-white;
}

@layer utilities {
  /* Check if can be merged with the tailwindcss */

  @property --cur-viewport-width {
    syntax: '<length>';
    initial-value: 0px;
    inherits: false;
  }

  @property --min-viewport-width {
    syntax: '<length>';
    initial-value: 0px;
    inherits: false;
  }

  @property --max-viewport-width {
    syntax: '<length>';
    initial-value: 0px;
    inherits: false;
  }

  :root {

    /* Style the selection to match your needs
  This is need when using the mix-blend-mode property
  */
    ::selection {
      background: rgba(255,
          255,
          255,
          0.5);
      /* Light semi-transparent highlight */
      color: black;
      /* Text color on selection */
    }


    --cur-viewport-width: 100vw;
    --min-viewport-width: 25rem;
    --max-viewport-width: 80rem;
    --cur-width: calc(100vw / 1vw);
    --cur-width: tan(atan2(var(--cur-viewport-width), 1px));
    --min-width: tan(atan2(var(--min-viewport-width), 1px));
    --max-width: tan(atan2(var(--max-viewport-width), 1px));
    --x: clamp(0,
      (var(--cur-width) - var(--min-width)) / (var(--max-width) - var(--min-width)),
      1);
    --ease-out-sine: sin((var(--x) * pi) / 2);
    --scale: calc((sqrt(5) + 1) / 2);
    --px-to-rem: 0.0625;
    --xxx-small: round(pow(var(--scale), -4), var(--px-to-rem));
    --xx-small: round(pow(var(--scale), -3), var(--px-to-rem));
    --x-small: round(pow(var(--scale), -2), var(--px-to-rem));
    --small: round(pow(var(--scale), -1), var(--px-to-rem));
    --medium: round(pow(var(--scale), 0), var(--px-to-rem));
    --large: round(pow(var(--scale), 1), var(--px-to-rem));
    --x-large: round(pow(var(--scale), 2), var(--px-to-rem));
    --xx-large: round(pow(var(--scale), 3), var(--px-to-rem));
    --xxx-large: round(pow(var(--scale), 4), var(--px-to-rem));
    --xxxx-large: round(pow(var(--scale), 5), var(--px-to-rem));
    --page-margin: calc(clamp(min(var(--x-large), var(--xxx-large)),
        var(--x-large) + var(--ease-out-sine) * (var(--xxx-large) - var(--x-large)),
        max(var(--x-large), var(--xxx-large))) * 1rem);
    --page-margin-inline: calc(clamp(min(var(--medium), var(--xxx-large)),
        var(--medium) + var(--ease-out-sine) * (var(--xxx-large) - var(--medium)),
        max(var(--medium), var(--xxx-large))) * 1rem);
    --column-width: calc(40rem + (var(--page-margin) * 2));
    --column-gutter: var(--page-margin);
    --nav-size: calc(var(--medium) * 1rem);
    --fg-color: #333333;
    --bg-color: #eeeeee;
    --secondary-fg-color: #bbbbbb;
    --tertiary-fg-color: #999999;
    --secondary-bg-color: #e0e0e0;
    --random-fg-color: #333333;
    --random-bg-color: #ffffff;
  }
}




[astro-icon].icon-light>* {
  stroke-width: 1.2;
}

[astro-icon].icon-bold>* {
  stroke-width: 2.4;
}

[data-aw-toggle-menu] path {
  @apply transition;
}

[data-aw-toggle-menu].expanded g>path:first-child {
  @apply translate-x-[-3px] translate-y-[15px] -rotate-45;
}

[data-aw-toggle-menu].expanded g>path:last-child {
  @apply translate-x-[14px] translate-y-[-8px] rotate-45;
}

/* To deprecated */

.dd *:first-child {
  margin-top: 0;
}
