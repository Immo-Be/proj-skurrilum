---
interface Props {
  title: string;
}

const {title} = Astro.props;
import {ViewTransitions} from 'astro:transitions';

import '../styles/utilities.css';
import Navbar from '../components/navbar';
---

<script>
  import {THEME} from '../types/app';
  const theme = (): THEME => {
    if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
      return localStorage.getItem('theme') as THEME;
    }
    if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
      return THEME.DARK;
    }
    return THEME.LIGHT;
  };

  const setTheme = () => {
    if (theme() === THEME.LIGHT) {
      document.documentElement.classList.remove(THEME.DARK);
    } else {
      document.documentElement.classList.add(THEME.DARK);
    }
    window.localStorage.setItem('theme', theme());
  };

  setTheme();
  document.addEventListener('astro:after-swap', () => {
    setTheme();
  });
</script>

<html lang="de">
  <head>
    <title>{title}</title>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/" />
    <meta name="generator" content={Astro.generator} />
    <ViewTransitions />
  </head>
  <body class="main-grid bg-primary text-text">
    <Navbar client:only="preact" />
    <slot name="after-header" />
    <main>
      <slot name="main-content" />
    </main>
  </body>
</html>
